Matrix([[L_1xx], [L_1xy], [L_1xz], [L_1yy], [L_1yz], [L_1zz], [l_1x], [l_1y], [l_1z], [m_1], [fv_1], [fc_1], [L_2xx], [L_2xy], [L_2xz], [L_2yy], [L_2yz], [L_2zz], [l_2x], [l_2y], [l_2z], [m_2], [fv_2], [fc_2], [L_3xx], [L_3xy], [L_3xz], [L_3yy], [L_3yz], [L_3zz], [l_3x], [l_3y], [l_3z], [m_3], [fv_3], [fc_3], [L_4xx], [L_4xy], [L_4xz], [L_4yy], [L_4yz], [L_4zz], [l_4x], [l_4y], [l_4z], [m_4], [fv_4], [fc_4], [L_5xx], [L_5xy], [L_5xz], [L_5yy], [L_5yz], [L_5zz], [l_5x], [l_5y], [l_5z], [m_5], [fv_5], [fc_5], [L_6xx], [L_6xy], [L_6xz], [L_6yy], [L_6yz], [L_6zz], [l_6x], [l_6y], [l_6z], [m_6], [fv_6], [fc_6], [L_7xx], [L_7xy], [L_7xz], [L_7yy], [L_7yz], [L_7zz], [l_7x], [l_7y], [l_7z], [m_7], [fv_7], [fc_7]])
void get_franka_M( double* M, const double* parms, const double* q )
{
  double x0 = -sin(q[1]);
  double x1 = cos(q[3]);
  double x2 = -cos(q[1]);
  double x3 = -x2;
  double x4 = cos(q[2]);
  double x5 = x0*x4;
  double x6 = -x5;
  double x7 = sin(q[3]);
  double x8 = x1*x3 + x6*x7;
  double x9 = sin(q[2]);
  double x10 = -x0*x9;
  double x11 = -x10;
  double x12 = -x11;
  double x13 = -0.316*x9;
  double x14 = x0*x13;
  double x15 = 0.0825*x11;
  double x16 = x1*x14 + x15*x7;
  double x17 = x1*x5 + x3*x7;
  double x18 = cos(q[4]);
  double x19 = sin(q[4]);
  double x20 = x12*x19 + x17*x18;
  double x21 = cos(q[5]);
  double x22 = sin(q[5]);
  double x23 = x20*x21 + x22*x8;
  double x24 = -x20;
  double x25 = x21*x8 + x22*x24;
  double x26 = -x25;
  double x27 = -x18;
  double x28 = -0.316*x5;
  double x29 = -x28;
  double x30 = x29 - 0.0825*x3;
  double x31 = -x8;
  double x32 = 0.384*x17 + x30 - 0.0825*x31;
  double x33 = 0.384*x12 + x16;
  double x34 = -x19;
  double x35 = x27*x32 + x33*x34;
  double x36 = -x35;
  double x37 = -x23;
  double x38 = sin(q[6]);
  double x39 = -x17;
  double x40 = x12*x18 + x19*x39;
  double x41 = -x40;
  double x42 = cos(q[6]);
  double x43 = x37*x38 + x41*x42;
  double x44 = x18*x33 + x32*x34;
  double x45 = -x14;
  double x46 = x1*x15 + x45*x7;
  double x47 = -0.0825*x11 + x46;
  double x48 = x21*x44 + x22*x47;
  double x49 = 0.088*x26 + x36;
  double x50 = x38*x49 + x42*x48;
  double x51 = -parms[79]*x26 + parms[80]*x43 + parms[81]*x50;
  double x52 = x38*x51;
  double x53 = -x48;
  double x54 = x38*x53 + x42*x49;
  double x55 = x23*x42 + x38*x41;
  double x56 = parms[78]*x26 - parms[80]*x55 + parms[81]*x54;
  double x57 = x42*x56;
  double x58 = parms[54]*x8 + parms[56]*x24 + parms[57]*x35 - parms[66]*x26 - parms[67]*x23 - parms[69]*x36 - x52 - x57;
  double x59 = -x38;
  double x60 = -parms[67]*x41 + parms[68]*x25 + parms[69]*x48 + x42*x51 + x56*x59;
  double x61 = -x44;
  double x62 = x21*x47 + x22*x61;
  double x63 = -x62;
  double x64 = -0.088*x41 + x63;
  double x65 = -parms[78]*x43 + parms[79]*x55 + parms[81]*x64;
  double x66 = parms[66]*x41 + parms[68]*x37 + parms[69]*x62 - x65;
  double x67 = -x22;
  double x68 = parms[55]*x31 + parms[56]*x40 + parms[57]*x44 + x21*x60 + x66*x67;
  double x69 = x18*x68;
  double x70 = parms[43]*x12 + parms[44]*x8 + parms[45]*x16 + x34*x58 + x69;
  double x71 = parms[54]*x41 + parms[55]*x20 + parms[57]*x47 + x21*x66 + x22*x60;
  double x72 = parms[42]*x11 + parms[44]*x39 + parms[45]*x46 + x71;
  double x73 = -x7;
  double x74 = -parms[31]*x3 + parms[32]*x10 + parms[33]*x14 + x1*x70 + x72*x73;
  double x75 = parms[42]*x31 + parms[43]*x17 + parms[45]*x30 + x27*x58 + x34*x68;
  double x76 = parms[30]*x3 + parms[32]*x6 + parms[33]*x28 - x75;
  double x77 = x19*x68;
  double x78 = -parms[44];
  double x79 = -parms[80];
  double x80 = parms[72]*x55 + parms[73]*x43 + parms[74]*x26 + parms[79]*x64 + x54*x79;
  double x81 = -parms[78];
  double x82 = parms[73]*x55 + parms[75]*x43 + parms[76]*x26 + parms[80]*x50 + x64*x81;
  double x83 = parms[62]*x23 + parms[64]*x25 + parms[65]*x41 + parms[66]*x62 + parms[67]*x53 + x38*x80 + x42*x82 - 0.088*x65;
  double x84 = -parms[54];
  double x85 = parms[49]*x20 + parms[51]*x40 + parms[52]*x8 + parms[56]*x44 + x47*x84 - x83;
  double x86 = x18*x58;
  double x87 = parms[60]*x23 + parms[61]*x25 + parms[62]*x41 + parms[67]*x36 + parms[68]*x63 + x42*x80 + x59*x82;
  double x88 = -parms[66];
  double x89 = -parms[79];
  double x90 = parms[74]*x55 + parms[76]*x43 + parms[77]*x26 + parms[78]*x54 + x50*x89;
  double x91 = parms[61]*x23 + parms[63]*x25 + parms[64]*x41 + parms[68]*x48 + x36*x88 - 0.088*x52 - 0.088*x57 - x90;
  double x92 = parms[48]*x20 + parms[49]*x40 + parms[50]*x8 + parms[55]*x47 + parms[56]*x36 + x21*x87 + x67*x91;
  double x93 = parms[36]*x17 + parms[37]*x8 + parms[38]*x11 + parms[43]*x30 + x18*x92 + x34*x85 + x46*x78 - 0.384*x77 - 0.384*x86;
  double x94 = parms[50]*x20 + parms[52]*x40 + parms[53]*x8 + parms[54]*x35 + parms[55]*x61 + x21*x91 + x22*x87;
  double x95 = -parms[42];
  double x96 = parms[37]*x17 + parms[39]*x8 + parms[40]*x11 + parms[44]*x16 + x30*x95 - 0.0825*x77 - 0.0825*x86 + x94;
  double x97 = parms[24]*x5 + parms[25]*x10 + parms[26]*x3 + parms[32]*x29 + x1*x93 + x73*x96;
  double x98 = 0.384*x19;
  double x99 = -parms[43];
  double x100 = parms[38]*x17 + parms[40]*x8 + parms[41]*x11 + parms[42]*x46 + x16*x99 + x27*x85 + x34*x92 + x58*x98 - 0.384*x69 - 0.0825*x71;
  double x101 = parms[25]*x5 + parms[27]*x10 + parms[28]*x3 + parms[32]*x14 - 0.0825*x1*x72 - x100 - 0.0825*x7*x70;
  double x102 = -x9;
  double x103 = parms[26]*x5 + parms[28]*x10 + parms[29]*x3 + parms[30]*x28 + parms[31]*x45 + x1*x96 + x7*x93 - 0.0825*x75;
  double x104 = parms[14]*x0 + parms[16]*x2 + x101*x4 + x13*x76 + 0.316*x4*x74 + x9*x97;
  double x105 = x73*x9;
  double x106 = -x4;
  double x107 = x1*x9;
  double x108 = x106*x34 + x107*x18;
  double x109 = x105*x22 + x108*x21;
  double x110 = -x106;
  double x111 = 0.0825*x106;
  double x112 = 0.316*x4;
  double x113 = x1*x112 + x111*x7;
  double x114 = 0.384*x110 + x113;
  double x115 = -x105;
  double x116 = -x13;
  double x117 = 0.384*x107 - 0.0825*x115 + x116;
  double x118 = x114*x18 + x117*x34;
  double x119 = x1*x111 + x112*x73;
  double x120 = -0.0825*x106 + x119;
  double x121 = x118*x67 + x120*x21;
  double x122 = -x121;
  double x123 = x105*x21 + x108*x67;
  double x124 = x114*x34 + x117*x27;
  double x125 = -x124;
  double x126 = x106*x27 + x107*x34;
  double x127 = -x126;
  double x128 = -x123;
  double x129 = x125 + 0.088*x128;
  double x130 = x118*x21 + x120*x22;
  double x131 = x129*x42 + x130*x59;
  double x132 = x109*x59 + x127*x42;
  double x133 = x109*x42 + x127*x38;
  double x134 = x122 - 0.088*x127;
  double x135 = parms[72]*x133 + parms[73]*x132 + parms[74]*x128 + parms[79]*x134 + x131*x79;
  double x136 = x129*x38 + x130*x42;
  double x137 = parms[73]*x133 + parms[75]*x132 + parms[76]*x128 + parms[80]*x136 + x134*x81;
  double x138 = parms[60]*x109 + parms[61]*x123 + parms[62]*x127 + parms[67]*x125 + parms[68]*x122 + x135*x42 + x137*x59;
  double x139 = -parms[55];
  double x140 = parms[74]*x133 + parms[76]*x132 + parms[77]*x128 + parms[78]*x131 + x136*x89;
  double x141 = parms[78]*x128 - parms[80]*x133 + parms[81]*x131;
  double x142 = x141*x42;
  double x143 = -parms[79]*x128 + parms[80]*x132 + parms[81]*x136;
  double x144 = x143*x38;
  double x145 = parms[61]*x109 + parms[63]*x123 + parms[64]*x127 + parms[68]*x130 + x125*x88 - x140 - 0.088*x142 - 0.088*x144;
  double x146 = parms[50]*x108 + parms[52]*x126 + parms[53]*x105 + parms[54]*x124 + x118*x139 + x138*x22 + x145*x21;
  double x147 = parms[54]*x105 - parms[56]*x108 + parms[57]*x124 - parms[66]*x128 - parms[67]*x109 - parms[69]*x125 - x142 - x144;
  double x148 = x147*x18;
  double x149 = -parms[67]*x127 + parms[68]*x123 + parms[69]*x130 + x141*x59 + x143*x42;
  double x150 = -parms[78]*x132 + parms[79]*x133 + parms[81]*x134;
  double x151 = parms[66]*x127 - parms[68]*x109 + parms[69]*x121 - x150;
  double x152 = parms[55]*x115 + parms[56]*x126 + parms[57]*x118 + x149*x21 + x151*x67;
  double x153 = x152*x19;
  double x154 = parms[37]*x107 + parms[39]*x105 + parms[40]*x106 + parms[44]*x113 + x116*x95 + x146 - 0.0825*x148 - 0.0825*x153;
  double x155 = parms[48]*x108 + parms[49]*x126 + parms[50]*x105 + parms[55]*x120 + parms[56]*x125 + x138*x21 + x145*x67;
  double x156 = -parms[67];
  double x157 = parms[62]*x109 + parms[64]*x123 + parms[65]*x127 + parms[66]*x121 + x130*x156 + x135*x38 + x137*x42 - 0.088*x150;
  double x158 = parms[49]*x108 + parms[51]*x126 + parms[52]*x105 + parms[56]*x118 + x120*x84 - x157;
  double x159 = parms[36]*x107 + parms[37]*x105 + parms[38]*x106 + parms[43]*x116 + x119*x78 - 0.384*x148 - 0.384*x153 + x155*x18 + x158*x34;
  double x160 = parms[54]*x127 + parms[55]*x108 + parms[57]*x120 + x149*x22 + x151*x21;
  double x161 = parms[42]*x106 - parms[44]*x107 + parms[45]*x119 + x160;
  double x162 = x152*x18;
  double x163 = parms[43]*x110 + parms[44]*x105 + parms[45]*x113 + x147*x34 + x162;
  double x164 = parms[42]*x115 + parms[43]*x107 + parms[45]*x116 + x147*x27 + x152*x34;
  double x165 = parms[38]*x107 + parms[40]*x105 + parms[41]*x106 + parms[42]*x119 + x113*x99 + x147*x98 + x155*x34 + x158*x27 - 0.0825*x160 - 0.384*x162;
  double x166 = parms[26]*x9 + parms[28]*x4 + parms[30]*x13 - parms[31]*x112 + x1*x154 + x159*x7 - 0.0825*x164;
  double x167 = x18*x7;
  double x168 = -x1;
  double x169 = -0.0825*x168 + 0.384*x7 - 0.0825;
  double x170 = x169*x27;
  double x171 = x1*x21 + x167*x67;
  double x172 = -x171;
  double x173 = -x170;
  double x174 = x1*x22 + x167*x21;
  double x175 = 0.088*x172 + x173;
  double x176 = x169*x34;
  double x177 = x176*x21;
  double x178 = x175*x42 + x177*x59;
  double x179 = x34*x7;
  double x180 = -x179;
  double x181 = x174*x42 + x180*x38;
  double x182 = parms[78]*x172 - parms[80]*x181 + parms[81]*x178;
  double x183 = x182*x42;
  double x184 = x174*x59 + x180*x42;
  double x185 = x175*x38 + x177*x42;
  double x186 = -parms[79]*x172 + parms[80]*x184 + parms[81]*x185;
  double x187 = x186*x38;
  double x188 = parms[54]*x1 - parms[56]*x167 + parms[57]*x170 - parms[66]*x172 - parms[67]*x174 - parms[69]*x173 - x183 - x187;
  double x189 = x176*x67;
  double x190 = -x189;
  double x191 = -0.088*x180 + x190;
  double x192 = -parms[78]*x184 + parms[79]*x181 + parms[81]*x191;
  double x193 = parms[66]*x180 - parms[68]*x174 + parms[69]*x189 - x192;
  double x194 = -parms[67]*x180 + parms[68]*x171 + parms[69]*x177 + x182*x59 + x186*x42;
  double x195 = parms[55]*x168 + parms[56]*x179 + parms[57]*x176 + x193*x67 + x194*x21;
  double x196 = parms[72]*x181 + parms[73]*x184 + parms[74]*x172 + parms[79]*x191 + x178*x79;
  double x197 = parms[73]*x181 + parms[75]*x184 + parms[76]*x172 + parms[80]*x185 + x191*x81;
  double x198 = parms[60]*x174 + parms[61]*x171 + parms[62]*x180 + parms[67]*x173 + parms[68]*x190 + x196*x42 + x197*x59;
  double x199 = parms[74]*x181 + parms[76]*x184 + parms[77]*x172 + parms[78]*x178 + x185*x89;
  double x200 = parms[61]*x174 + parms[63]*x171 + parms[64]*x180 + parms[68]*x177 + x173*x88 - 0.088*x183 - 0.088*x187 - x199;
  double x201 = parms[50]*x167 + parms[52]*x179 + parms[53]*x1 + parms[54]*x170 + x139*x176 + x198*x22 + x200*x21;
  double x202 = x19*x195;
  double x203 = x18*x188;
  double x204 = parms[48]*x167 + parms[49]*x179 + parms[50]*x1 + parms[56]*x173 + x198*x21 + x200*x67;
  double x205 = parms[62]*x174 + parms[64]*x171 + parms[65]*x180 + parms[66]*x189 + x156*x177 - 0.088*x192 + x196*x38 + x197*x42;
  double x206 = parms[49]*x167 + parms[51]*x179 + parms[52]*x1 + parms[56]*x176 - x205;
  double x207 = parms[38]*x7 + parms[40]*x1 - 0.0825*parms[54]*x180 - 0.0825*parms[55]*x167 - 0.384*x18*x195 + x188*x98 - 0.0825*x193*x21 - 0.0825*x194*x22 + x204*x34 + x206*x27;
  double x208 = -x27;
  double x209 = -0.384*x18;
  double x210 = x209*x67 - 0.0825*x21;
  double x211 = -x210;
  double x212 = -0.088*x208 + x211;
  double x213 = x21*x34;
  double x214 = x208*x42 + x213*x59;
  double x215 = x34*x67;
  double x216 = -x215;
  double x217 = -x98;
  double x218 = 0.088*x216 + x217;
  double x219 = x209*x21 - 0.0825*x22;
  double x220 = x218*x42 + x219*x59;
  double x221 = x208*x38 + x213*x42;
  double x222 = parms[72]*x221 + parms[73]*x214 + parms[74]*x216 + parms[79]*x212 + x220*x79;
  double x223 = x218*x38 + x219*x42;
  double x224 = parms[73]*x221 + parms[75]*x214 + parms[76]*x216 + parms[80]*x223 + x212*x81;
  double x225 = parms[60]*x213 + parms[61]*x215 + parms[62]*x208 + parms[67]*x217 + parms[68]*x211 + x222*x42 + x224*x59;
  double x226 = parms[74]*x221 + parms[76]*x214 + parms[77]*x216 + parms[78]*x220 + x223*x89;
  double x227 = -parms[79]*x216 + parms[80]*x214 + parms[81]*x223;
  double x228 = x227*x38;
  double x229 = parms[78]*x216 - parms[80]*x221 + parms[81]*x220;
  double x230 = x229*x42;
  double x231 = parms[61]*x213 + parms[63]*x215 + parms[64]*x208 + parms[68]*x219 + x217*x88 - x226 - 0.088*x228 - 0.088*x230;
  double x232 = -parms[78]*x214 + parms[79]*x221 + parms[81]*x212;
  double x233 = parms[62]*x213 + parms[64]*x215 + parms[65]*x208 + parms[66]*x210 + x156*x219 + x222*x38 + x224*x42 - 0.088*x232;
  double x234 = -parms[67]*x208 + parms[68]*x215 + parms[69]*x219 + x227*x42 + x229*x59;
  double x235 = parms[66]*x208 - parms[68]*x213 + parms[69]*x210 - x232;
  double x236 = parms[50]*x34 + parms[52]*x27 + parms[54]*x98 + x139*x209 + x21*x231 + x22*x225;
  double x237 = -x21;
  double x238 = 0.088*x237;
  double x239 = x238*x38;
  double x240 = x22*x59;
  double x241 = x22*x42;
  double x242 = x238*x42;
  double x243 = parms[74]*x241 + parms[76]*x240 + parms[77]*x237 + parms[78]*x242 + x239*x89;
  double x244 = parms[72]*x241 + parms[73]*x240 + parms[74]*x237 + x242*x79;
  double x245 = parms[73]*x241 + parms[75]*x240 + parms[76]*x237 + parms[80]*x239;
  double x246 = parms[62]*x22 + parms[64]*x21 + 0.088*parms[78]*x240 - 0.088*parms[79]*x241 + x244*x38 + x245*x42;
  double x247 = parms[74]*x38 + parms[76]*x42;
//
  M[0] = parms[5] + x0*(parms[12]*x0 + parms[13]*x2 + x101*x102 - 0.316*x4*x76 + x4*x97 - 0.316*x74*x9) + x2*(parms[13]*x0 + parms[15]*x2 - x103);
  M[1] = x104;
  M[2] = x103;
  M[3] = x100;
  M[4] = x94;
  M[5] = x83;
  M[6] = x90;
  M[7] = x104;
  M[8] = parms[17] + x112*(parms[32]*x4 + parms[33]*x112 + x1*x163 + x161*x73) + x13*(parms[32]*x102 + parms[33]*x13 - x164) + x4*(parms[25]*x9 + parms[27]*x4 + parms[32]*x112 - 0.0825*x1*x161 - 0.0825*x163*x7 - x165) + x9*(parms[24]*x9 + parms[25]*x4 + parms[32]*x116 + x1*x159 + x154*x73);
  M[9] = x166;
  M[10] = x165;
  M[11] = x146;
  M[12] = x157;
  M[13] = x140;
  M[14] = x103;
  M[15] = x166;
  M[16] = parms[29] - 0.0825*parms[42]*x168 - 0.0825*parms[43]*x7 + 0.00680625*parms[45] + x1*(parms[37]*x7 + parms[39]*x1 + 0.0825*parms[42] + x201 - 0.0825*x202 - 0.0825*x203) - 0.0825*x188*x27 - 0.0825*x195*x34 + x7*(parms[36]*x7 + parms[37]*x1 - 0.0825*parms[43] + x18*x204 - 0.384*x202 - 0.384*x203 + x206*x34);
  M[17] = x207;
  M[18] = x201;
  M[19] = x205;
  M[20] = x199;
  M[21] = x100;
  M[22] = x165;
  M[23] = x207;
  M[24] = parms[41] - 0.0825*parms[54]*x208 - 0.0825*parms[55]*x34 + 0.00680625*parms[57] + x209*(parms[56]*x27 + parms[57]*x209 + x21*x234 + x235*x67) - 0.0825*x21*x235 - 0.0825*x22*x234 + x27*(parms[49]*x34 + parms[51]*x27 + 0.0825*parms[54] + parms[56]*x209 - x233) + x34*(parms[48]*x34 + parms[49]*x27 - 0.0825*parms[55] + parms[56]*x217 + x21*x225 + x231*x67) + x98*(-parms[56]*x34 + parms[57]*x98 - parms[66]*x216 - parms[67]*x213 - parms[69]*x217 - x228 - x230);
  M[25] = x236;
  M[26] = x233;
  M[27] = x226;
  M[28] = x94;
  M[29] = x146;
  M[30] = x201;
  M[31] = x236;
  M[32] = parms[53] + x21*(parms[61]*x22 + parms[63]*x21 - x243 - 0.088*x38*(-parms[79]*x237 + parms[80]*x240 + parms[81]*x239) - 0.088*x42*(parms[78]*x237 - parms[80]*x241 + parms[81]*x242)) + x22*(parms[60]*x22 + parms[61]*x21 + x244*x42 + x245*x59);
  M[33] = x246;
  M[34] = x243;
  M[35] = x83;
  M[36] = x157;
  M[37] = x205;
  M[38] = x233;
  M[39] = x246;
  M[40] = parms[65] + 0.088*parms[78]*x42 - 0.088*parms[79]*x38 + 0.007744*parms[81] + x38*(parms[72]*x38 + parms[73]*x42 - 0.088*parms[79]) + x42*(parms[73]*x38 + parms[75]*x42 + 0.088*parms[78]);
  M[41] = x247;
  M[42] = x90;
  M[43] = x140;
  M[44] = x199;
  M[45] = x226;
  M[46] = x243;
  M[47] = x247;
  M[48] = parms[77];
//
  return;
}
void get_franka_c( double* c, const double* parms, const double* q, const double* dq )
{
  double x0 = sin(q[1]);
  double x1 = -dq[0];
  double x2 = x0*x1;
  double x3 = cos(q[1]);
  double x4 = x1*x3;
  double x5 = x2*x4;
  double x6 = cos(q[2]);
  double x7 = sin(q[2]);
  double x8 = dq[1]*x4;
  double x9 = -0.632*x8;
  double x10 = -0.316*x5*x6 + x7*x9;
  double x11 = -x2;
  double x12 = dq[1]*x6 + x11*x7;
  double x13 = dq[2]*x12 + x6*x8;
  double x14 = dq[0]*dq[1]*x0;
  double x15 = -x14;
  double x16 = dq[1]*x7 + x2*x6;
  double x17 = -x16;
  double x18 = dq[2]*x17 - x7*x8;
  double x19 = -0.316*((dq[1])*(dq[1])) - 0.316*((x2)*(x2));
  double x20 = -x4;
  double x21 = dq[2] + x20;
  double x22 = parms[24]*x16 + parms[25]*x12 + parms[26]*x21;
  double x23 = parms[26]*x16 + parms[28]*x12 + parms[29]*x21;
  double x24 = cos(q[4]);
  double x25 = x12*x16;
  double x26 = x15 + x25;
  double x27 = 0.316*x5*x7 + x6*x9;
  double x28 = -x27;
  double x29 = -0.0825*x26 + x28;
  double x30 = sin(q[3]);
  double x31 = cos(q[3]);
  double x32 = x17*x30 + x21*x31;
  double x33 = dq[3]*x32 + x13*x31 + x15*x30;
  double x34 = -x12;
  double x35 = dq[3] + x34;
  double x36 = x32*x35;
  double x37 = x33 + x36;
  double x38 = x16*x31 + x21*x30;
  double x39 = x35*x38;
  double x40 = -x38;
  double x41 = -x13;
  double x42 = dq[3]*x40 + x15*x31 + x30*x41;
  double x43 = -x42;
  double x44 = x39 + x43;
  double x45 = -x29 - 0.384*x37 + 0.0825*x44;
  double x46 = -x18;
  double x47 = x16*x21;
  double x48 = x19 + 0.0825*x46 + 0.0825*x47;
  double x49 = -((x21)*(x21));
  double x50 = -((x12)*(x12)) + x49;
  double x51 = x10 + 0.0825*x50;
  double x52 = x30*x48 + x31*x51;
  double x53 = x32*x38;
  double x54 = -x46;
  double x55 = x53 + x54;
  double x56 = -((x35)*(x35));
  double x57 = -((x32)*(x32));
  double x58 = x56 + x57;
  double x59 = x52 + 0.384*x55 - 0.0825*x58;
  double x60 = sin(q[4]);
  double x61 = -x60;
  double x62 = x24*x45 + x59*x61;
  double x63 = -x35;
  double x64 = x24*x38 + x60*x63;
  double x65 = x24*x63 + x40*x60;
  double x66 = x64*x65;
  double x67 = dq[4]*x65 + x24*x33 + x54*x60;
  double x68 = -x67;
  double x69 = dq[4] + x32;
  double x70 = x65*x69;
  double x71 = -((x69)*(x69));
  double x72 = -((x64)*(x64));
  double x73 = cos(q[6]);
  double x74 = cos(q[5]);
  double x75 = sin(q[5]);
  double x76 = x64*x74 + x69*x75;
  double x77 = -x76;
  double x78 = dq[5]*x77 + x42*x74 + x68*x75;
  double x79 = -x78;
  double x80 = -x65;
  double x81 = dq[5] + x80;
  double x82 = sin(q[6]);
  double x83 = x73*x76 + x81*x82;
  double x84 = x73*x81 + x77*x82;
  double x85 = x83*x84;
  double x86 = -((x83)*(x83));
  double x87 = -x64;
  double x88 = x69*x74 + x75*x87;
  double x89 = -x88;
  double x90 = dq[6] + x89;
  double x91 = -((x90)*(x90));
  double x92 = -((x38)*(x38));
  double x93 = x56 + x92;
  double x94 = x46 + x53;
  double x95 = -x30;
  double x96 = x31*x48 + x51*x95;
  double x97 = 0.384*x93 - 0.0825*x94 + x96;
  double x98 = x24*x59 + x45*x60;
  double x99 = x74*x98 + x75*x97;
  double x100 = -((x81)*(x81));
  double x101 = -((x88)*(x88));
  double x102 = x100 + x101;
  double x103 = 0.088*x102 + x99;
  double x104 = -x82;
  double x105 = x76*x81;
  double x106 = x105 + x79;
  double x107 = -x62;
  double x108 = 0.088*x106 + x107;
  double x109 = x103*x104 + x108*x73;
  double x110 = -x33;
  double x111 = dq[4]*x87 + x110*x60 + x24*x54;
  double x112 = -x111;
  double x113 = dq[5]*x88 + x42*x75 + x67*x74;
  double x114 = dq[6]*x84 + x112*x82 + x113*x73;
  double x115 = x84*x90;
  double x116 = parms[78]*(x79 + x85) + parms[79]*(x86 + x91) + parms[80]*(-x114 + x115) + parms[81]*x109;
  double x117 = x116*x73;
  double x118 = -((x84)*(x84));
  double x119 = x83*x90;
  double x120 = -x83;
  double x121 = -x113;
  double x122 = dq[6]*x120 + x112*x73 + x121*x82;
  double x123 = x103*x73 + x108*x82;
  double x124 = parms[78]*(x118 + x91) + parms[79]*(-x79 + x85) + parms[80]*(x119 + x122) + parms[81]*x123;
  double x125 = x124*x82;
  double x126 = -((x76)*(x76));
  double x127 = x81*x88;
  double x128 = parms[54]*(x42 + x66) + parms[55]*(x71 + x72) + parms[56]*(x68 + x70) + parms[57]*x62 - parms[66]*x106 - parms[67]*(x113 + x127) - parms[68]*(x101 + x126) - parms[69]*x107 - x117 - x125;
  double x129 = x76*x88;
  double x130 = x112 + x129;
  double x131 = -x98;
  double x132 = x131*x75 + x74*x97;
  double x133 = -x132;
  double x134 = -0.088*x130 + x133;
  double x135 = parms[78]*(x119 - x122) + parms[79]*(x114 + x115) + parms[80]*(x118 + x86) + parms[81]*x134;
  double x136 = parms[66]*x130 + parms[67]*(x100 + x126) + parms[68]*(x121 + x127) + parms[69]*x132 - x135;
  double x137 = -x75;
  double x138 = parms[66]*x102 + parms[67]*(-x112 + x129) + parms[68]*(x105 + x78) + parms[69]*x99 + x104*x116 + x124*x73;
  double x139 = x64*x69;
  double x140 = -((x65)*(x65));
  double x141 = parms[54]*(x140 + x71) + parms[55]*(x43 + x66) + parms[56]*(x111 + x139) + parms[57]*x98 + x136*x137 + x138*x74;
  double x142 = x141*x24;
  double x143 = parms[42]*x58 + parms[43]*x55 + parms[44]*(x39 + x42) + parms[45]*x52 + x128*x61 + x142;
  double x144 = parms[54]*(x112 + x139) + parms[55]*(x67 + x70) + parms[56]*(x140 + x72) + parms[57]*x97 + x136*x74 + x138*x75;
  double x145 = parms[42]*x94 + parms[43]*x93 + parms[44]*(x110 + x36) + parms[45]*x96 + x144;
  double x146 = parms[37]*x38 + parms[39]*x32 + parms[40]*x35;
  double x147 = parms[36]*x38 + parms[37]*x32 + parms[38]*x35;
  double x148 = parms[50]*x64 + parms[52]*x65 + parms[53]*x69;
  double x149 = parms[48]*x64 + parms[49]*x65 + parms[50]*x69;
  double x150 = parms[72]*x83 + parms[73]*x84 + parms[74]*x90;
  double x151 = parms[74]*x83 + parms[76]*x84 + parms[77]*x90;
  double x152 = parms[73]*x114 + parms[75]*x122 + parms[76]*x79 - parms[78]*x134 + parms[80]*x123 + x120*x151 + x150*x90;
  double x153 = parms[61]*x76 + parms[63]*x88 + parms[64]*x81;
  double x154 = parms[60]*x76 + parms[61]*x88 + parms[62]*x81;
  double x155 = parms[73]*x83 + parms[75]*x84 + parms[76]*x90;
  double x156 = parms[72]*x114 + parms[73]*x122 + parms[74]*x79 + parms[79]*x134 - parms[80]*x109 + x151*x84 - x155*x90;
  double x157 = parms[62]*x113 + parms[64]*x78 + parms[65]*x112 + parms[66]*x132 - parms[67]*x99 - 0.088*x135 + x152*x73 + x153*x76 + x154*x89 + x156*x82;
  double x158 = parms[49]*x67 + parms[51]*x111 + parms[52]*x42 - parms[54]*x97 + parms[56]*x98 + x148*x87 + x149*x69 - x157;
  double x159 = parms[74]*x114 + parms[76]*x122 + parms[77]*x79 + parms[78]*x109 - parms[79]*x123 - x150*x84 + x155*x83;
  double x160 = parms[62]*x76 + parms[64]*x88 + parms[65]*x81;
  double x161 = parms[61]*x113 + parms[63]*x78 + parms[64]*x112 - parms[66]*x107 + parms[68]*x99 - 0.088*x117 - 0.088*x125 + x154*x81 - x159 + x160*x77;
  double x162 = parms[60]*x113 + parms[61]*x78 + parms[62]*x112 + parms[67]*x107 + parms[68]*x133 + x104*x152 - x153*x81 + x156*x73 + x160*x88;
  double x163 = parms[49]*x64 + parms[51]*x65 + parms[52]*x69;
  double x164 = parms[48]*x67 + parms[49]*x111 + parms[50]*x42 + parms[55]*x97 + parms[56]*x107 + x137*x161 + x148*x65 + x162*x74 - x163*x69;
  double x165 = parms[38]*x33 + parms[40]*x42 + parms[41]*x46 + parms[42]*x96 - parms[43]*x52 + 0.384*x128*x60 - 0.384*x142 - 0.0825*x144 + x146*x38 - x147*x32 - x158*x24 + x164*x61;
  double x166 = parms[25]*x13 + parms[27]*x18 + parms[28]*x15 - parms[30]*x19 + parms[32]*x10 - 0.0825*x143*x30 - 0.0825*x145*x31 - x165 + x17*x23 + x21*x22;
  double x167 = parms[30]*x50 + parms[31]*(-x15 + x25) + parms[32]*(x18 + x47) + parms[33]*x10 + x143*x31 + x145*x95;
  double x168 = x128*x24;
  double x169 = parms[42]*x44 + parms[43]*x37 + parms[44]*(x57 + x92) + parms[45]*x29 + x141*x61 - x168;
  double x170 = parms[30]*x26 + parms[31]*(-((x16)*(x16)) + x49) + parms[32]*(x12*x21 + x41) + parms[33]*x27 - x169;
  double x171 = dq[1]*parms[16] + parms[13]*x2 + parms[15]*x4;
  double x172 = dq[1]*parms[17] + parms[14]*x2 + parms[16]*x4;
  double x173 = parms[50]*x67 + parms[52]*x111 + parms[53]*x42 + parms[54]*x62 + parms[55]*x131 + x149*x80 + x161*x74 + x162*x75 + x163*x64;
  double x174 = parms[38]*x38 + parms[40]*x32 + parms[41]*x35;
  double x175 = x141*x60;
  double x176 = parms[37]*x33 + parms[39]*x42 + parms[40]*x46 - parms[42]*x29 + parms[44]*x52 + x147*x35 - 0.0825*x168 + x173 + x174*x40 - 0.0825*x175;
  double x177 = parms[36]*x33 + parms[37]*x42 + parms[38]*x46 + parms[43]*x29 - parms[44]*x96 + x146*x63 + x158*x61 + x164*x24 - 0.384*x168 + x174*x32 - 0.384*x175;
  double x178 = parms[25]*x16 + parms[27]*x12 + parms[28]*x21;
  double x179 = parms[24]*x13 + parms[25]*x18 + parms[26]*x15 + parms[31]*x19 + parms[32]*x28 + x12*x23 + x176*x95 + x177*x31 - x178*x21;
  double x180 = parms[26]*x13 + parms[28]*x18 + parms[29]*x15 + parms[30]*x27 - parms[31]*x10 + x16*x178 - 0.0825*x169 + x176*x31 + x177*x30 + x22*x34;
  double x181 = dq[1]*parms[14] + parms[12]*x2 + parms[13]*x4;
//
  c[0] = -x0*(-dq[1]*x171 + parms[12]*x8 + parms[13]*x14 - x166*x7 - 0.316*x167*x7 - 0.316*x170*x6 + x172*x4 + x179*x6) - x3*(dq[1]*x181 + parms[13]*x8 + parms[15]*x14 + x11*x172 - x180);
  c[1] = parms[14]*x8 + parms[16]*x14 + x166*x6 + 0.316*x167*x6 - 0.316*x170*x7 + x171*x2 + x179*x7 + x181*x20;
  c[2] = x180;
  c[3] = x165;
  c[4] = x173;
  c[5] = x157;
  c[6] = x159;
//
  return;
}
void get_franka_g( double* g, const double* parms, const double* q )
{
  double x0 = sin(q[1]);
  double x1 = -9.81*x0;
  double x2 = -x1;
  double x3 = sin(q[2]);
  double x4 = x2*x3;
  double x5 = -x4;
  double x6 = cos(q[4]);
  double x7 = -x5;
  double x8 = sin(q[3]);
  double x9 = cos(q[1]);
  double x10 = -9.81*x9;
  double x11 = -x10;
  double x12 = cos(q[2]);
  double x13 = x1*x12;
  double x14 = cos(q[3]);
  double x15 = x11*x8 + x13*x14;
  double x16 = -x15;
  double x17 = sin(q[4]);
  double x18 = x16*x17 + x6*x7;
  double x19 = -x18;
  double x20 = sin(q[6]);
  double x21 = -x13;
  double x22 = x11*x14 + x21*x8;
  double x23 = sin(q[5]);
  double x24 = x15*x6 + x17*x7;
  double x25 = cos(q[5]);
  double x26 = x22*x23 + x24*x25;
  double x27 = cos(q[6]);
  double x28 = x19*x20 + x26*x27;
  double x29 = parms[81]*x28;
  double x30 = x20*x29;
  double x31 = -x26;
  double x32 = x19*x27 + x20*x31;
  double x33 = parms[81]*x32;
  double x34 = x27*x33;
  double x35 = parms[57]*x18 - parms[69]*x19 - x30 - x34;
  double x36 = x35*x6;
  double x37 = -x20;
  double x38 = parms[69]*x26 + x27*x29 + x33*x37;
  double x39 = -x23;
  double x40 = -x24;
  double x41 = x22*x25 + x23*x40;
  double x42 = -x41;
  double x43 = parms[81]*x42;
  double x44 = parms[69]*x41 - x43;
  double x45 = parms[57]*x24 + x25*x38 + x39*x44;
  double x46 = -x17;
  double x47 = parms[45]*x5 - x36 + x45*x46;
  double x48 = parms[33]*x4 - x47;
  double x49 = parms[57]*x22 + x23*x38 + x25*x44;
  double x50 = parms[45]*x22 + x49;
  double x51 = -x8;
  double x52 = x45*x6;
  double x53 = parms[45]*x15 + x35*x46 + x52;
  double x54 = parms[33]*x13 + x14*x53 + x50*x51;
  double x55 = -parms[78]*x42 + parms[80]*x28;
  double x56 = parms[79]*x42 - parms[80]*x32;
  double x57 = parms[67]*x19 + parms[68]*x42 + x27*x56 + x37*x55;
  double x58 = parms[78]*x32 - parms[79]*x28;
  double x59 = -parms[66]*x19 + parms[68]*x26 - 0.088*x30 - 0.088*x34 - x58;
  double x60 = parms[55]*x22 + parms[56]*x19 + x25*x57 + x39*x59;
  double x61 = -x22;
  double x62 = parms[66]*x41 + parms[67]*x31 + x20*x56 + x27*x55 - 0.088*x43;
  double x63 = parms[54]*x61 + parms[56]*x24 - x62;
  double x64 = parms[42]*x22 + parms[43]*x16 + 0.384*x17*x35 + x46*x60 - 0.0825*x49 - 0.384*x52 - x6*x63;
  double x65 = -parms[30]*x11 + parms[32]*x13 - 0.0825*x14*x50 - 0.0825*x53*x8 - x64;
  double x66 = x17*x45;
  double x67 = parms[43]*x5 + parms[44]*x61 - 0.384*x36 + x46*x63 + x6*x60 - 0.384*x66;
  double x68 = parms[54]*x18 + parms[55]*x40 + x23*x57 + x25*x59;
  double x69 = parms[42]*x7 + parms[44]*x15 - 0.0825*x36 - 0.0825*x66 + x68;
  double x70 = parms[31]*x11 + parms[32]*x5 + x14*x67 + x51*x69;
  double x71 = parms[30]*x4 + parms[31]*x21 + x14*x69 - 0.0825*x47 + x67*x8;
//
  g[0] = -x0*(parms[20]*x11 - 0.316*x12*x48 + x12*x70 - 0.316*x3*x54 - x3*x65) - x9*(parms[20]*x1 - x71);
  g[1] = parms[18]*x10 + parms[19]*x2 + 0.316*x12*x54 + x12*x65 - 0.316*x3*x48 + x3*x70;
  g[2] = x71;
  g[3] = x64;
  g[4] = x68;
  g[5] = x62;
  g[6] = x58;
//
  return;
}
void get_franka_f( double* f, const double* parms, const double* q, const double* dq )
{
//
  f[0] = dq[0]*parms[10] + parms[11]*sign(dq[0]);
  f[1] = dq[1]*parms[22] + parms[23]*sign(dq[1]);
  f[2] = dq[2]*parms[34] + parms[35]*sign(dq[2]);
  f[3] = dq[3]*parms[46] + parms[47]*sign(dq[3]);
  f[4] = dq[4]*parms[58] + parms[59]*sign(dq[4]);
  f[5] = dq[5]*parms[70] + parms[71]*sign(dq[5]);
  f[6] = dq[6]*parms[82] + parms[83]*sign(dq[6]);
//
  return;
}
void get_franka_invdyn( double* invdyn, const double* parms, const double* q, const double* dq, const double* ddq )
{
  double x0 = cos(q[1]);
  double x1 = -ddq[0];
  double x2 = sin(q[1]);
  double x3 = dq[0]*dq[1]*x2 + x0*x1;
  double x4 = -dq[0];
  double x5 = x2*x4;
  double x6 = x0*x4;
  double x7 = dq[1]*parms[14] + parms[12]*x5 + parms[13]*x6;
  double x8 = dq[1]*parms[17] + parms[14]*x5 + parms[16]*x6;
  double x9 = dq[1]*x6;
  double x10 = x1*x2 + x9;
  double x11 = -9.81*x2;
  double x12 = cos(q[2]);
  double x13 = -0.316*x10 - 0.316*x9;
  double x14 = 0.316*ddq[1] + x11 - 0.316*x5*x6;
  double x15 = sin(q[2]);
  double x16 = -x15;
  double x17 = x12*x13 + x14*x16;
  double x18 = ddq[2] - x3;
  double x19 = dq[1]*x15 + x12*x5;
  double x20 = dq[1]*x12 + x16*x5;
  double x21 = -x6;
  double x22 = dq[2] + x21;
  double x23 = parms[24]*x19 + parms[25]*x20 + parms[26]*x22;
  double x24 = -x20;
  double x25 = ddq[1]*x15 + dq[2]*x20 + x10*x12;
  double x26 = x12*x14 + x13*x15;
  double x27 = -x19;
  double x28 = ddq[1]*x12 + dq[2]*x27 - x10*x15;
  double x29 = parms[25]*x19 + parms[27]*x20 + parms[28]*x22;
  double x30 = cos(q[5]);
  double x31 = cos(q[6]);
  double x32 = cos(q[4]);
  double x33 = dq[3] + x24;
  double x34 = -x33;
  double x35 = sin(q[4]);
  double x36 = sin(q[3]);
  double x37 = cos(q[3]);
  double x38 = x19*x37 + x22*x36;
  double x39 = -x38;
  double x40 = x32*x34 + x35*x39;
  double x41 = -x40;
  double x42 = dq[5] + x41;
  double x43 = sin(q[6]);
  double x44 = x32*x38 + x34*x35;
  double x45 = x22*x37 + x27*x36;
  double x46 = dq[4] + x45;
  double x47 = sin(q[5]);
  double x48 = x30*x44 + x46*x47;
  double x49 = x31*x48 + x42*x43;
  double x50 = -x48;
  double x51 = x31*x42 + x43*x50;
  double x52 = x49*x51;
  double x53 = -x28;
  double x54 = ddq[3] + x53;
  double x55 = -x54;
  double x56 = dq[3]*x45 + x18*x36 + x25*x37;
  double x57 = dq[4]*x40 + x32*x56 + x35*x55;
  double x58 = -x57;
  double x59 = -x25;
  double x60 = dq[3]*x39 + x18*x37 + x36*x59;
  double x61 = ddq[4] + x60;
  double x62 = dq[5]*x50 + x30*x61 + x47*x58;
  double x63 = -x62;
  double x64 = ddq[6] + x63;
  double x65 = -((x51)*(x51));
  double x66 = -x44;
  double x67 = x30*x46 + x47*x66;
  double x68 = -x67;
  double x69 = dq[6] + x68;
  double x70 = -((x69)*(x69));
  double x71 = -x56;
  double x72 = dq[4]*x66 + x32*x55 + x35*x71;
  double x73 = -x72;
  double x74 = ddq[5] + x73;
  double x75 = dq[5]*x67 + x30*x57 + x47*x61;
  double x76 = -x75;
  double x77 = -x49;
  double x78 = dq[6]*x77 + x31*x74 + x43*x76;
  double x79 = x49*x69;
  double x80 = -9.81*x0;
  double x81 = -x80;
  double x82 = -0.316*((dq[1])*(dq[1])) - 0.316*((x5)*(x5)) + x81;
  double x83 = x19*x22;
  double x84 = 0.0825*x53 + x82 + 0.0825*x83;
  double x85 = -((x22)*(x22));
  double x86 = -((x20)*(x20)) + x85;
  double x87 = x26 + 0.0825*x86;
  double x88 = -x36;
  double x89 = x37*x84 + x87*x88;
  double x90 = x38*x45;
  double x91 = x54 + x90;
  double x92 = -((x38)*(x38));
  double x93 = -((x33)*(x33));
  double x94 = x92 + x93;
  double x95 = x89 - 0.0825*x91 + 0.384*x94;
  double x96 = x33*x45;
  double x97 = x56 + x96;
  double x98 = x19*x20;
  double x99 = x18 + x98;
  double x100 = -x17;
  double x101 = x100 - 0.0825*x99;
  double x102 = x33*x38;
  double x103 = x102 - x60;
  double x104 = -x101 + 0.0825*x103 - 0.384*x97;
  double x105 = -((x45)*(x45));
  double x106 = x105 + x93;
  double x107 = x55 + x90;
  double x108 = x36*x84 + x37*x87;
  double x109 = -0.0825*x106 + 0.384*x107 + x108;
  double x110 = x104*x35 + x109*x32;
  double x111 = x110*x30 + x47*x95;
  double x112 = -((x67)*(x67));
  double x113 = -((x42)*(x42));
  double x114 = x112 + x113;
  double x115 = x111 + 0.088*x114;
  double x116 = -x35;
  double x117 = x104*x32 + x109*x116;
  double x118 = -x117;
  double x119 = x42*x48;
  double x120 = x119 + x63;
  double x121 = x118 + 0.088*x120;
  double x122 = x115*x31 + x121*x43;
  double x123 = parms[78]*(x65 + x70) + parms[79]*(x52 - x64) + parms[80]*(x78 + x79) + parms[81]*x122;
  double x124 = x48*x67;
  double x125 = -((x49)*(x49));
  double x126 = -x43;
  double x127 = x115*x126 + x121*x31;
  double x128 = dq[6]*x51 + x31*x75 + x43*x74;
  double x129 = x51*x69;
  double x130 = parms[78]*(x52 + x64) + parms[79]*(x125 + x70) + parms[80]*(-x128 + x129) + parms[81]*x127;
  double x131 = parms[66]*x114 + parms[67]*(x124 - x74) + parms[68]*(x119 + x62) + parms[69]*x111 + x123*x31 + x126*x130;
  double x132 = x42*x67;
  double x133 = -((x48)*(x48));
  double x134 = x124 + x74;
  double x135 = -x110;
  double x136 = x135*x47 + x30*x95;
  double x137 = -x136;
  double x138 = -0.088*x134 + x137;
  double x139 = parms[78]*(-x78 + x79) + parms[79]*(x128 + x129) + parms[80]*(x125 + x65) + parms[81]*x138;
  double x140 = parms[66]*x134 + parms[67]*(x113 + x133) + parms[68]*(x132 + x76) + parms[69]*x136 - x139;
  double x141 = -x47;
  double x142 = x40*x44;
  double x143 = -((x40)*(x40));
  double x144 = -((x46)*(x46));
  double x145 = x44*x46;
  double x146 = parms[54]*(x143 + x144) + parms[55]*(x142 - x61) + parms[56]*(x145 + x72) + parms[57]*x110 + x131*x30 + x140*x141;
  double x147 = x123*x43;
  double x148 = x130*x31;
  double x149 = -((x44)*(x44));
  double x150 = x40*x46;
  double x151 = parms[54]*(x142 + x61) + parms[55]*(x144 + x149) + parms[56]*(x150 + x58) + parms[57]*x117 - parms[66]*x120 - parms[67]*(x132 + x75) - parms[68]*(x112 + x133) - parms[69]*x118 - x147 - x148;
  double x152 = x151*x32;
  double x153 = parms[42]*x103 + parms[43]*x97 + parms[44]*(x105 + x92) + parms[45]*x101 + x116*x146 - x152;
  double x154 = parms[48]*x44 + parms[49]*x40 + parms[50]*x46;
  double x155 = parms[50]*x44 + parms[52]*x40 + parms[53]*x46;
  double x156 = parms[74]*x49 + parms[76]*x51 + parms[77]*x69;
  double x157 = parms[73]*x49 + parms[75]*x51 + parms[76]*x69;
  double x158 = parms[72]*x128 + parms[73]*x78 + parms[74]*x64 + parms[79]*x138 - parms[80]*x127 + x156*x51 - x157*x69;
  double x159 = parms[72]*x49 + parms[73]*x51 + parms[74]*x69;
  double x160 = parms[73]*x128 + parms[75]*x78 + parms[76]*x64 - parms[78]*x138 + parms[80]*x122 + x156*x77 + x159*x69;
  double x161 = parms[60]*x48 + parms[61]*x67 + parms[62]*x42;
  double x162 = parms[61]*x48 + parms[63]*x67 + parms[64]*x42;
  double x163 = parms[62]*x75 + parms[64]*x62 + parms[65]*x74 + parms[66]*x136 - parms[67]*x111 - 0.088*x139 + x158*x43 + x160*x31 + x161*x68 + x162*x48;
  double x164 = parms[49]*x57 + parms[51]*x72 + parms[52]*x61 - parms[54]*x95 + parms[56]*x110 + x154*x46 + x155*x66 - x163;
  double x165 = x146*x35;
  double x166 = parms[62]*x48 + parms[64]*x67 + parms[65]*x42;
  double x167 = parms[60]*x75 + parms[61]*x62 + parms[62]*x74 + parms[67]*x118 + parms[68]*x137 + x126*x160 + x158*x31 - x162*x42 + x166*x67;
  double x168 = parms[74]*x128 + parms[76]*x78 + parms[77]*x64 + parms[78]*x127 - parms[79]*x122 + x157*x49 - x159*x51;
  double x169 = parms[61]*x75 + parms[63]*x62 + parms[64]*x74 - parms[66]*x118 + parms[68]*x111 - 0.088*x147 - 0.088*x148 + x161*x42 + x166*x50 - x168;
  double x170 = parms[49]*x44 + parms[51]*x40 + parms[52]*x46;
  double x171 = parms[48]*x57 + parms[49]*x72 + parms[50]*x61 + parms[55]*x95 + parms[56]*x118 + x141*x169 + x155*x40 + x167*x30 - x170*x46;
  double x172 = parms[37]*x38 + parms[39]*x45 + parms[40]*x33;
  double x173 = parms[38]*x38 + parms[40]*x45 + parms[41]*x33;
  double x174 = parms[36]*x56 + parms[37]*x60 + parms[38]*x54 + parms[43]*x101 - parms[44]*x89 + x116*x164 - 0.384*x152 - 0.384*x165 + x171*x32 + x172*x34 + x173*x45;
  double x175 = parms[36]*x38 + parms[37]*x45 + parms[38]*x33;
  double x176 = parms[50]*x57 + parms[52]*x72 + parms[53]*x61 + parms[54]*x117 + parms[55]*x135 + x154*x41 + x167*x47 + x169*x30 + x170*x44;
  double x177 = parms[37]*x56 + parms[39]*x60 + parms[40]*x54 - parms[42]*x101 + parms[44]*x108 - 0.0825*x152 - 0.0825*x165 + x173*x39 + x175*x33 + x176;
  double x178 = parms[26]*x25 + parms[28]*x28 + parms[29]*x18 + parms[30]*x17 - parms[31]*x26 - 0.0825*x153 + x174*x36 + x177*x37 + x19*x29 + x23*x24;
  double x179 = parms[30]*x99 + parms[31]*(-((x19)*(x19)) + x85) + parms[32]*(x20*x22 + x59) + parms[33]*x17 - x153;
  double x180 = parms[54]*(x145 + x73) + parms[55]*(x150 + x57) + parms[56]*(x143 + x149) + parms[57]*x95 + x131*x47 + x140*x30;
  double x181 = parms[42]*x91 + parms[43]*x94 + parms[44]*(x71 + x96) + parms[45]*x89 + x180;
  double x182 = x146*x32;
  double x183 = parms[42]*x106 + parms[43]*x107 + parms[44]*(x102 + x60) + parms[45]*x108 + x116*x151 + x182;
  double x184 = parms[30]*x86 + parms[31]*(-x18 + x98) + parms[32]*(x28 + x83) + parms[33]*x26 + x181*x88 + x183*x37;
  double x185 = dq[1]*parms[16] + parms[13]*x5 + parms[15]*x6;
  double x186 = parms[26]*x19 + parms[28]*x20 + parms[29]*x22;
  double x187 = parms[24]*x25 + parms[25]*x28 + parms[26]*x18 + parms[31]*x82 + parms[32]*x100 + x174*x37 + x177*x88 + x186*x20 - x22*x29;
  double x188 = parms[38]*x56 + parms[40]*x60 + parms[41]*x54 + parms[42]*x89 - parms[43]*x108 + x116*x171 + 0.384*x151*x35 - x164*x32 + x172*x38 - x175*x45 - 0.0825*x180 - 0.384*x182;
  double x189 = parms[25]*x25 + parms[27]*x28 + parms[28]*x18 - parms[30]*x82 + parms[32]*x26 - 0.0825*x181*x37 - 0.0825*x183*x36 + x186*x27 - x188 + x22*x23;
//
  invdyn[0] = ddq[0]*parms[5] + dq[0]*parms[10] + parms[11]*sign(dq[0]) - x0*(ddq[1]*parms[16] + dq[1]*x7 + parms[13]*x10 + parms[15]*x3 + parms[20]*x11 - x178 - x5*x8) - x2*(ddq[1]*parms[14] - dq[1]*x185 + parms[12]*x10 + parms[13]*x3 + parms[20]*x81 - 0.316*x12*x179 + x12*x187 - 0.316*x15*x184 + x16*x189 + x6*x8);
  invdyn[1] = ddq[1]*parms[17] + dq[1]*parms[22] + parms[14]*x10 + parms[16]*x3 + parms[18]*x80 - parms[19]*x11 + parms[23]*sign(dq[1]) + 0.316*x12*x184 + x12*x189 - 0.316*x15*x179 + x15*x187 + x185*x5 + x21*x7;
  invdyn[2] = dq[2]*parms[34] + parms[35]*sign(dq[2]) + x178;
  invdyn[3] = dq[3]*parms[46] + parms[47]*sign(dq[3]) + x188;
  invdyn[4] = dq[4]*parms[58] + parms[59]*sign(dq[4]) + x176;
  invdyn[5] = dq[5]*parms[70] + parms[71]*sign(dq[5]) + x163;
  invdyn[6] = dq[6]*parms[82] + parms[83]*sign(dq[6]) + x168;
//
  return;
}
